Gaussian kernel: K(x_i, x_j) = exp(-gamma*||x_i-x_j||^2)

===========================
Compile and Run the program
===========================

1. The windows binary of the following programs are in libsvm_windows folder: 
      svmpredict.mexw64
	  svmtrain.mexw64
	  libsvmread.mexw64
	  libsvm.dll

   For the 32-bit version, please recompile the original libsvm package on your
   computer and copy the above four files into the libsvm_windows folder. 

2. Run DC-SVM: 
   
   in windows folder, run demo_ijcnn.m or demo_covtype.m in the matlab environment. 


===============
Functionalities
===============

We recommend the following easy-to-use procedures, which usually achieves high test 
accuracy and fast training time. All the following functions are our proposed algorithms. 

Training an approximated rbf SVM: a faster way to compute approximate solution. 
[model] = dcsvm_rbf_train(trainy, trainX, C, gamma, ncluster)

 Arguments:
 trainy       training labels, an n by 1 matrix.  
 trainX       training data, an n by d matrix, each row is a data point. 
 C            the balancing parameter in SVM
 gamma        the kernel parameter for Gaussian kernel
              K(x,y) = exp(-gamma*||x-y||_2^2)
 ncluster     number of clusters 

Prediction using a DCSVM model: 

 [labels decision_values] = dcsvm_test(testy, testX)

 Input Arguments: 
 testy     testing labels, an n by 1 matrix. 
 testX     testing data, an n by d matrix, each row is a data point. 
 model     the DCSVM model generated by dcsvm_train

