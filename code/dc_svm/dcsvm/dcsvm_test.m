function [labels accuracy] = dcsvm_test(testy, testX, model)
% [labels decision_values] = dcsvm_test(testy, testX)
%
% Input Arguments: 
% testy     testing labels, an n by 1 matrix. 
% testX     testing data, an n by d matrix, each row is a data point. 
% model     the DCSVM model generated by dcsvm_train
%

lt = size(testX,1);
d = size(testX,2);
addpath('../libsvm-3.14-nobias/matlab');

if model.mode == 0
	if model.method == 1
		k = model.numcluster;
		centers = model.centers;
		dis = sum(testX.*testX,2)*ones(1,k)+ones(lt,1)*(sum(centers.*centers,2))'-2*testX*centers';
		[v ind] = sort(dis,2,'ascend');
	elseif model.method == 0
		alllabel = zeros(size(testX,1),1);
		k = model.numcluster;
		if model.kernel == 0
			ind = knkmeans_rbf_predict(model.Xsample, testX, model.train_label, model.gamma,model.Ksample);
		elseif model.kernel == 1
			ind = knkmeans_poly_predict(model.Xsample, testX, model.train_label, model.gamma,model.degree, model.Ksample);
		end
	end
	labels = zeros(lt,1);
	for i=1:k
		subset = ind(:,1)==i;
		[labels(subset)] = svmpredict(testy(subset), testX(subset,:), model.models{i},'-q');
	end
	accuracy = nnz(labels==testy)/lt;
elseif model.mode == 1
	[labels] = svmpredict(testy, testX, model.model, '-q');
	accuracy = nnz(labels==testy)/lt;
end

